{"version":3,"sources":["../src/router.js"],"names":["Router","controller","addressbar","mapper","options","activeRoute","stateGetter","getState","bind","provider","router","getUrl","getPath","getValues","getOrigin","setUrl","goTo","redirect","redirectToSignal","baseUrl","onlyHash","pathname","on","routesConfig","routes","routesBySignal","onUrlChange","onSignalStart","onFlush","preventAutostart","url","path","replace","origin","indexOf","event","getRoutablePart","target","value","match","route","values","mapped","map","err","Error","allowEscape","preventDefault","console","warn","computedRMapping","propsMapping","signal","stateMapping","payload","getters","props","state","runSignal","resolve","forEach","key","set","undefined","Object","keys","tracker","run","reduce","mappedPayload","prevSignal","getSignal","execution","name","stringify","resolved","getValue","filterFalsy","changed","computedMapping","shouldUpdate","resolvedMap","trackerHandle","needsInit","assign","split","signalName"],"mappings":"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","file":"router.js","sourcesContent":["import {computeShouldChange, flattenConfig, hasChangedPath, getRoutesBySignal} from './utils'\nimport {getChangedProps} from 'cerebral/lib/utils'\n\nexport default class Router {\n  constructor (controller, addressbar, mapper, options) {\n    this.controller = controller\n    this.addressbar = addressbar\n    this.mapper = mapper\n    this.options = options\n    this.activeRoute = {}\n    this.stateGetter = this.controller.getState.bind(this.controller)\n\n    this.provider = {\n      router: {\n        getUrl: this.getUrl.bind(this),\n        getPath: this.getPath.bind(this),\n        getValues: this.getValues.bind(this),\n        getOrigin: this.getOrigin.bind(this),\n        setUrl: this.setUrl.bind(this),\n        goTo: this.goTo.bind(this),\n        redirect: this.redirect.bind(this),\n        redirectToSignal: this.redirectToSignal.bind(this)\n      }\n    }\n\n    if (!options.baseUrl && options.onlyHash) {\n      // autodetect baseUrl\n      options.baseUrl = addressbar.pathname\n    }\n    options.baseUrl = (options.baseUrl || '') + (options.onlyHash ? '#' : '')\n\n    controller.on('initialized', () => {\n      this.routesConfig = flattenConfig(options.routes)\n      this.routesBySignal = getRoutesBySignal(this.routesConfig, controller)\n\n      addressbar.on('change', this.onUrlChange.bind(this))\n      controller.on('start', this.onSignalStart.bind(this))\n      controller.on('flush', this.onFlush.bind(this))\n\n      if (!options.preventAutostart) {\n        this.onUrlChange()\n      }\n    })\n  }\n\n  getRoutablePart (url) {\n    let path = url.replace(this.addressbar.origin, '')\n    if (path[0] !== '/') {\n      path = '/' + path\n    }\n    if (this.options.onlyHash && !~path.indexOf('#')) {\n      // treat hash absense as root route\n      path = path + '#/'\n    }\n    return path.indexOf(this.options.baseUrl) === 0\n      ? path.replace(this.options.baseUrl, '')\n      : null\n  }\n\n  onUrlChange (event) {\n    const url = this.getRoutablePart(event ? event.target.value : this.addressbar.value)\n    if (url === null) return\n\n    let match, route, values\n    try {\n      const mapped = this.mapper.map(url, this.routesConfig) || {}\n      match = mapped.match\n      route = mapped.route\n      values = mapped.values\n    } catch (err) {\n      throw new Error('Could not parse url (' + err + ').')\n    }\n\n    if (!match) {\n      if (this.options.allowEscape) return\n\n      event && event.preventDefault()\n      console.warn(`Cerebral router - No route matched ${url}, navigation was prevented. Please verify url or catch unmatched routes with a \"/*\" route.`) // eslint-disable-line no-console\n      return\n    }\n\n    event && event.preventDefault()\n    const {computedRMapping, map, propsMapping, signal, stateMapping} = match\n    let payload = values\n    const getters = {props: payload, state: this.stateGetter}\n\n    if (stateMapping || computedRMapping) {\n      this.controller.runSignal('router.routed', [\n        ({state, resolve}) => {\n          if (stateMapping) {\n            stateMapping.forEach((key) => {\n              const value = values[key]\n              state.set(resolve.path(map[key]), value === undefined ? null : value)\n            })\n          }\n          if (computedRMapping) {\n            Object.keys(computedRMapping).forEach(path => {\n              const {tracker} = computedRMapping[path]\n              tracker.run(this.stateGetter, values)\n\n              const value = tracker.value\n              state.set(path, value === undefined ? null : value)\n            })\n          }\n        }\n      ])\n    }\n\n    if (propsMapping) {\n      payload = propsMapping.reduce((mappedPayload, key) => {\n        mappedPayload[map[key].getPath(getters)] = values[key] || null\n        return mappedPayload\n      }, {})\n    }\n\n    const prevSignal = (this.routesConfig[this.activeRoute.route] || {}).signal\n    if (signal && (prevSignal !== signal || getChangedProps(payload || {}, this.activeRoute.payload || {}))) {\n      this.controller.getSignal(signal)(payload)\n    }\n\n    this.activeRoute = {route, payload}\n  }\n\n  onSignalStart (execution, payload) {\n    const route = this.routesBySignal[execution.name]\n    if (!route) return\n\n    const {map} = this.routesConfig[route]\n    const getters = {props: payload, state: this.stateGetter}\n\n    // resolve mappings on current props and state\n    const url = this.mapper.stringify(\n      route,\n      map\n        ? Object.keys(map || {}).reduce((resolved, key) => {\n          const value = map[key].getValue(getters)\n\n          if (this.options.filterFalsy && !value) {\n            return resolved\n          }\n\n          resolved[key] = value\n          return resolved\n        }, {})\n        : payload\n    )\n\n    this.setUrl(url)\n\n    this.activeRoute = {route, payload}\n  }\n\n  onFlush (changed) {\n    const {route, payload} = this.activeRoute\n    const {map, stateMapping, computedMapping} = this.routesConfig[route] || {}\n    if (!stateMapping && !computedMapping) return\n    const getters = {props: payload, state: this.stateGetter}\n    let shouldUpdate = false\n\n    const resolvedMap = Object.keys(map || {}).reduce((resolved, key) => {\n      let value\n\n      if (computedMapping && computedMapping[key]) {\n        const trackerHandle = computedMapping[key]\n        const {needsInit, tracker} = trackerHandle\n\n        if (needsInit || computeShouldChange(tracker, changed)) {\n          trackerHandle.needsInit = false\n          tracker.run(this.stateGetter, payload)\n          shouldUpdate = true\n        }\n\n        value = tracker.value === null ? undefined : tracker.value\n      } else {\n        const path = map[key].getPath(getters)\n        value = map[key].getValue(getters)\n\n        shouldUpdate = shouldUpdate || (stateMapping.indexOf(key) >= 0 && hasChangedPath(changed, path))\n      }\n\n      if (!this.options.filterFalsy || value) {\n        // Cerebral state only supports null and url-mapper only supports\n        // undefined: so we map from one to the other here.\n        resolved[key] = value === null ? undefined : value\n      }\n\n      return resolved\n    }, {})\n\n    if (shouldUpdate) {\n      this.setUrl(this.mapper.stringify(route, Object.assign({}, resolvedMap)))\n    }\n  }\n\n  setUrl (url) {\n    this.addressbar.value = (this.options.baseUrl + url) || '/'\n  }\n\n  getUrl () {\n    return this.addressbar.value\n  }\n\n  getPath () {\n    return this.addressbar.value.replace(this.addressbar.origin + this.options.baseUrl, '').split('?')[0]\n  }\n\n  getValues () {\n    const url = this.getRoutablePart(this.addressbar.value)\n    const mapped = this.mapper.map(url, this.routesConfig) || {}\n\n    return mapped.values\n  }\n\n  getOrigin () {\n    return this.addressbar.origin\n  }\n\n  goTo (url) {\n    this.addressbar.value = this.options.baseUrl + url\n    this.onUrlChange()\n  }\n\n  redirect (url) {\n    this.addressbar.value = {\n      value: this.options.baseUrl + url,\n      replace: true\n    }\n\n    this.onUrlChange()\n  }\n\n  redirectToSignal (signalName, payload) {\n    const route = this.routesBySignal[signalName]\n    if (!route) {\n      console.warn(`redirectToSignal: signal '${signalName}' not bound to route.`)\n    }\n    this.controller.getSignal(signalName)(payload)\n  }\n\n  reload () {\n    this.redirect(this.getUrl())\n  }\n}\n"]}